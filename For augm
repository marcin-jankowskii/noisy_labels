import matplotlib.pyplot as plt

output = img.numpy().transpose(1,2,0)
plt.imshow(output)
plt.axis("off")
plt.show()
cv2.imwrite('/media/cal314-1/9E044F59044F3415/Marcin/noisy_labels/example_brightness.png',output*255)

img_forever = img_forever - mask_blurred
output2 = img_forever.numpy().transpose(1,2,0)
plt.imshow(output2)
plt.axis("off")
plt.show()
cv2.imwrite('/media/cal314-1/9E044F59044F3415/Marcin/noisy_labels/example_line_brightness.png',output2*255)



import matplotlib.pyplot as plt

output = img.numpy().transpose(1,2,0)
plt.imshow(output)
plt.axis("off")
plt.show()
cv2.imwrite('/media/cal314-1/9E044F59044F3415/Marcin/noisy_labels/example_blur.png',output*255)

img_forever = img_forever.unsqueeze(0)
segment_img2 = img_forever[:, :, start_point[1]:end_point[1], start_point[0]:end_point[0]].clone()
blurred_segment = K.filters.box_blur(segment_img2, (10, 10))
img_forever[:, :, start_point[1]:end_point[1], start_point[0]:end_point[0]] = blurred_segment
img_forever = img_forever.squeeze(0)
output2 = img_forever.numpy().transpose(1,2,0)
plt.imshow(output2)
plt.axis("off")
plt.show()
cv2.imwrite('/media/cal314-1/9E044F59044F3415/Marcin/noisy_labels/example_alone_blur.png',output2*255)



import matplotlib.pyplot as plt

output = new_mask.numpy().transpose(1,2,0)
new_mask2 = np.zeros((512, 512))
for i in range(3):
    new_mask2[new_mask[i] == 1] = i

colors = [[0, 0, 0], [0, 255, 0], [0, 0, 255],[255,255,0]]  # tło, wić, główka

mask_to_display = new_mask2

mask_rgb = np.zeros((mask_to_display.shape[0], mask_to_display.shape[1], 3), dtype=np.uint8)
for i, color in enumerate(colors):
    mask_rgb[mask_to_display == i] = color

plt.imshow(mask_rgb)
plt.axis("off")
plt.show()
cv2.imwrite('/media/cal314-1/9E044F59044F3415/Marcin/noisy_labels/example_GT.png',mask_rgb)







