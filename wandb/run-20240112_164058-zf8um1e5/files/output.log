
/media/cal314-1/9E044F59044F3415/Marcin/noisy_labels/Dataset/SegSperm/train
/media/cal314-1/9E044F59044F3415/Marcin/noisy_labels/Dataset/SegSperm/test_small
GPU dostÄ™pne: NVIDIA GeForce RTX 3090
Traceback (most recent call last):
  File "/media/cal314-1/9E044F59044F3415/Marcin/noisy_labels/Kod/train.py", line 260, in <module>
    main(model, train_loader, val_loader, optimizer,scheduler, loss_fn, config.epochs,aug,t_aug,save_name)
  File "/media/cal314-1/9E044F59044F3415/Marcin/noisy_labels/Kod/train.py", line 156, in main
    train_loss,train_iou,images,lbls,preds = train(model, train_loader, optimizer,scheduler, loss_fn,augumentation,T_aug,epoch_number)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/media/cal314-1/9E044F59044F3415/Marcin/noisy_labels/Kod/train.py", line 81, in train
    output = model(inputs)
             ^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1568, in _call_impl
    result = forward_call(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/segmentation_models_pytorch/base/model.py", line 30, in forward
    decoder_output = self.decoder(*features)
                     ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/segmentation_models_pytorch/decoders/unetplusplus/decoder.py", line 135, in forward
    dense_x[f"x_{depth_idx}_{dense_l_i}"] = self.blocks[f"x_{depth_idx}_{dense_l_i}"](
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/segmentation_models_pytorch/decoders/unetplusplus/decoder.py", line 40, in forward
    x = self.conv1(x)
        ^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/container.py", line 215, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/modules/batchnorm.py", line 171, in forward
    return F.batch_norm(
           ^^^^^^^^^^^^^
  File "/home/cal314-1/miniconda3/envs/marcin/lib/python3.11/site-packages/torch/nn/functional.py", line 2478, in batch_norm
    return torch.batch_norm(
           ^^^^^^^^^^^^^^^^^
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 512.00 MiB. GPU 0 has a total capacty of 23.69 GiB of which 548.56 MiB is free. Process 84161 has 254.10 MiB memory in use. Including non-PyTorch memory, this process has 22.10 GiB memory in use. Of the allocated memory 19.86 GiB is allocated by PyTorch, and 935.11 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF